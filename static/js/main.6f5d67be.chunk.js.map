{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/About.js","Components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","toUpperCase","showAlert","toLowerCase","CapWords","split","map","elt","charAt","substring","join","navigator","clipboard","writeText","filter","About","class","Alert","height","alert","role","word","lower","slice","Capitalized","msg","defaultProps","App","setMode","setAlert","message","setTimeout","document","body","background","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f5d67be.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <strong>\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              {props.title}\r\n            </Link>\r\n          </strong>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About Us\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div\r\n              className={`form-check form-switch text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n            >\r\n              <input\r\n                onClick={props.toggleMode}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className=\"form-check-label\"\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable Dark Mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string }; //Prop will be strickly string type\r\n\r\nNavbar.defaultProps = { title: `Set Title Here` }; //Default prop will be set iff not predefined\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleUpClick = () => {\r\n    //Will uppercase the text and update text\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"Converted To UpperCase\", \"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    //Will lowercase the text and update text\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Converted To LowerCase\", \"success\");\r\n  };\r\n  const handleCapsClick = () => {\r\n    let words = text.toLowerCase().split(\" \");\r\n    let CapWords = words.map(elt => elt.charAt(0).toUpperCase() + elt.substring(1))\r\n    setText(CapWords.join(\" \"));\r\n    props.showAlert(\"Intial Words Capitalized\", \"success\");\r\n  };\r\n  const handleExtraSpaces = () => {\r\n    setText(text.split(/[ ]+/).join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\");\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Copied To Clipboard\", \"success\");\r\n  };\r\n  const handleClear = () => {\r\n    setText(\" \");\r\n    props.showAlert(\"Text Cleared\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    //Will take every key press and update text\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode === 'light' ? 'black' : 'white'}}>\r\n        <h1><strong>{props.heading}</strong></h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor: props.mode === 'light' ? 'white' : '#444444', color: props.mode === 'light' ? 'black' : 'white'}}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1 my-1\" disabled={text.length === 0} onClick={handleUpClick}>\r\n          Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" disabled={text.length === 0} onClick={handleLowClick}>\r\n          Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" disabled={text.length === 0} onClick={handleCapsClick}>\r\n          Capitalized case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1 my-1\" disabled={text.length === 0} onClick={handleExtraSpaces}>\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-success mx-1 my-1\" disabled={text.length === 0} onClick={handleCopy}>\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-danger mx-1 my-1\" disabled={text.length === 0} onClick={handleClear}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color: props.mode === 'light' ? 'black' : 'white'}}>\r\n        <h2><strong>Your Text Summary</strong></h2>\r\n        <p>\r\n          {text.split(/\\s+/).filter((elt) => {return elt.length !== 0}).length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").filter((elt) => {return elt.length !== 0}).length} Minutes to Read</p>\r\n        <h2><strong>Preview</strong></h2>\r\n        <p>{text.length>0?text: \"Nothing To Preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color: props.mode === 'light' ? 'black' : 'white', backgroundColor: props.mode === 'light' ? 'white' : '#444444'}}>\r\n        <h1 className=\"my-3\">About Us</h1>\r\n        <div class=\"accordion\" id=\"accordionExample\">\r\n          <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                class=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                <strong>Analyze Your Text</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              class=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div class=\"accordion-body\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#343a40'}}>\r\n                TextUtils gives you a way to anyalyze your text quickly and efficiently. It has word counter, character counter and lot a more features.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                class=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n              >\r\n                <strong>Free To Use</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              class=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div class=\"accordion-body\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#343a40'}}>\r\n                TextUtils is a free character coutner tool that provides instant character count and word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/character limit.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"accordion-item\">\r\n            <h2 class=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                class=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n              >\r\n                <strong>Browser Compatible</strong>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              class=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div class=\"accordion-body\" style={{backgroundColor: props.mode === 'light' ? 'white' : '#343a40'}}>\r\n                This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const Capitalized = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert && \r\n    <div>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{Capitalized(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport TextForm from \"./Components/TextForm\";\r\nimport About from \"./Components/About\";\r\nimport Alert from \"./Components/Alert\";\r\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type,\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 2000);\r\n  };\r\n\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.background = \"#343A40\";\r\n      showAlert(\"Dark Mode Had Been Enabled\", \"success\");\r\n      document.title = \"TextUtils - Dark Mode\";\r\n    } else {\r\n      setMode(\"light\");\r\n      document.body.style.background = \"white \";\r\n      showAlert(\"Light Mode Had Been Enabled\", \"success\");\r\n      document.title = \"TextUtils - Light Mode\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\r\n        <Alert alert={alert} />\r\n        <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About mode={mode}/>\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <div className=\"container my-3\">\r\n              <TextForm\r\n                heading=\"Enter the text to analyze below\"\r\n                mode={mode}\r\n                showAlert={showAlert}\r\n              />\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}